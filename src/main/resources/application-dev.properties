## master druid数据源配置
spring.datasource.druid.master.url=jdbc:mysql://172.168.83.111:3306/mastereakay?useUnicode=true&characterEncoding=utf8
spring.datasource.druid.master.username=root
spring.datasource.druid.master.password=root
spring.datasource.druid.master.initial-size=5
spring.datasource.druid.master.min-idle=10
spring.datasource.druid.master.max-active=50
spring.datasource.druid.master.max-wait=60000
spring.datasource.druid.master.time-between-eviction-runs-millis=60000
spring.datasource.druid.master.min-evictable-idle-time-millis=300000
spring.datasource.druid.master.validation-query=SELECT 1 FROM DUAL 
spring.datasource.druid.master.test-while-idle=true
spring.datasource.druid.master.test-on-borrow=false
spring.datasource.druid.master.test-on-return=false

spring.datasource.mybatis.master.base-package=cn.eakay.springboot.repository.mybaits.master
spring.datasource.mybatis.master.mapper-location=classpath:sqlmap/master/*.xml

## slave druid数据源配置
spring.datasource.druid.slave.url=jdbc:mysql://172.168.83.112:3306/slaveeakay?useUnicode=true&characterEncoding=utf8
spring.datasource.druid.slave.username=root
spring.datasource.druid.slave.password=root
spring.datasource.druid.slave.initial-size=5
spring.datasource.druid.slave.min-idle=10
spring.datasource.druid.slave.max-active=50
spring.datasource.druid.slave.max-wait=60000
spring.datasource.druid.slave.time-between-eviction-runs-millis=60000
spring.datasource.druid.slave.min-evictable-idle-time-millis=300000
spring.datasource.druid.slave.validation-query=SELECT 1 FROM DUAL 
spring.datasource.druid.slave.test-while-idle=true
spring.datasource.druid.slave.test-on-borrow=false
spring.datasource.druid.slave.test-on-return=false

spring.datasource.mybatis.slave.base-package=cn.eakay.springboot.repository.mybaits.slave
spring.datasource.mybatis.slave.mapper-location=classpath:sqlmap/slave/*.xml



## druid监控配置#########################################################################################################
## statfilter
spring.datasource.druid.filter.stat.log-slow-sql= true
spring.datasource.druid.filter.stat.slow-sql-millis=1000
spring.datasource.druid.filter.stat.merge-sql=true
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.enabled=true

## WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
#spring.datasource.druid.stat-view-servlet.allow=
#你可以配置principalSessionName，使得druid能够知道当前的cookie的用户是谁
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
#你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
spring.datasource.druid.web-stat-filter.principal-session-name=admin
#置profileEnable能够监控单个url调用的sql列表。
spring.datasource.druid.web-stat-filter.profile-enable=true
#session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=true
#最大session数
spring.datasource.druid.web-stat-filter.session-stat-max-count=100000
#配置StatViewServlet
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true

#配置wall filter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.alter-table-allow=false
spring.datasource.druid.filter.wall.config.truncate-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false
#是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL。
spring.datasource.druid.filter.wall.config.none-base-statement-allow=false
#检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
spring.datasource.druid.filter.wall.config.update-where-none-check=true
#SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
spring.datasource.druid.filter.wall.config.select-into-outfile-allow=false
#是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
spring.datasource.druid.filter.wall.config.metadata-allow=true
#对被认为是攻击的SQL进行LOG.error输出
spring.datasource.druid.filter.wall.log-violation=true
#对被认为是攻击的SQL抛出SQLExcepton
spring.datasource.druid.filter.wall.throw-exception=true

#配置spring关联
#设置使用Cglib进行代理，因为部分需要代理的不是接口不适用于JDK动态代理，会报错
spring.aop.proxy-target-class=true
# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns=cn.eakay.springboot.biz.*
## druid监控配置 end!####################################################################################################


pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


##mapper.mappers=cn.eakay.springboot.repository.BaseMapper
##mapper.not-empty=
##mapper.identity=

## mybatis-generator自动生成代码
targetModelPackage=cn.eakay.springboot.client
targetMapperPackage=sqlmap
targetClientPackage=cn.eakay.springboot.repository
targetJavaProject=src/main/java
targetResources=src/main/resources

